name: dockercompose2820259310930141123
services:
  mongodb:
    environment:
      MONGO_INITDB_DATABASE: salles
    image: mongo:6-jammy
    networks:
      default: null
    ports:
      - mode: ingress
        target: 27017
        published: "27017"
        protocol: tcp
    volumes:
      - type: volume
        source: dbdata6
        target: /data/salles
        volume: {}
      - type: bind
        source: C:\Mongo\mongo-backup\testMongo\testMongo\init-scripts\script.js
        target: /docker-entrypoint-initdb.d/script.js
        bind:
          create_host_path: true
  testmongo:
    build:
      context: C:\Mongo\mongo-backup\testMongo
      dockerfile: testMongo/Dockerfile
    depends_on:
      mongodb:
        condition: service_started
        required: true
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: https://+:443;http://+:80
      MONGODB_CONNECTION_STRING: mongodb://mongodb:27017/salles
    image: testmongo
    networks:
      default: null
    ports:
      - mode: ingress
        target: 80
        protocol: tcp
      - mode: ingress
        target: 443
        protocol: tcp
    volumes:
      - type: bind
        source: C:\Users\59011-82-08\AppData\Roaming/Microsoft/UserSecrets
        target: /root/.microsoft/usersecrets
        read_only: true
        bind:
          create_host_path: true
      - type: bind
        source: C:\Users\59011-82-08\AppData\Roaming/ASP.NET/Https
        target: /root/.aspnet/https
        read_only: true
        bind:
          create_host_path: true
networks:
  default:
    name: dockercompose2820259310930141123_default
volumes:
  dbdata6:
    name: dockercompose2820259310930141123_dbdata6